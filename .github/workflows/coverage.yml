name: Test Coverage Report

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: pg_template_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up test database
      run: |
        PGPASSWORD=password psql -h localhost -U postgres -d pg_template_test -c "
        CREATE TABLE IF NOT EXISTS users (
          id BIGSERIAL PRIMARY KEY,
          username VARCHAR(50) UNIQUE NOT NULL,
          password VARCHAR(255) NOT NULL,
          email VARCHAR(100) UNIQUE NOT NULL,
          full_name VARCHAR(100),
          is_active BOOLEAN DEFAULT true,
          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
          updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );"

    - name: Run tests with coverage
      run: mvn clean verify jacoco:report jacoco:report-integration
      env:
        SPRING_PROFILES_ACTIVE: test
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/pg_template_test
        SPRING_DATASOURCE_USERNAME: postgres
        SPRING_DATASOURCE_PASSWORD: password

    - name: Generate merged coverage report
      run: mvn jacoco:merge jacoco:report

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: madrapps/jacoco-report@v1.6.1
      with:
        paths: |
          ${{ github.workspace }}/target/site/jacoco/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 70
        min-coverage-changed-files: 60
        title: 'Code Coverage Report'
        update-comment: true

    - name: Generate coverage badge
      if: github.ref == 'refs/heads/main'
      run: |
        # 提取覆盖率百分比
        COVERAGE=$(grep -o 'Total[^%]*%' target/site/jacoco/index.html | grep -o '[0-9]*%' | head -1 | sed 's/%//')
        echo "Coverage: ${COVERAGE}%"
        
        # 生成徽章颜色
        if [ "$COVERAGE" -ge 80 ]; then
          COLOR="brightgreen"
        elif [ "$COVERAGE" -ge 70 ]; then
          COLOR="yellow"
        elif [ "$COVERAGE" -ge 60 ]; then
          COLOR="orange"
        else
          COLOR="red"
        fi
        
        # 创建徽章URL
        BADGE_URL="https://img.shields.io/badge/coverage-${COVERAGE}%25-${COLOR}"
        echo "Badge URL: $BADGE_URL"
        
        # 保存到文件供后续使用
        echo "$BADGE_URL" > coverage-badge-url.txt

    - name: Archive coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-reports
        path: |
          target/site/jacoco/
          target/site/jacoco-merged/
          target/surefire-reports/
        retention-days: 30

    - name: Deploy coverage report to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/site
        destination_dir: coverage-reports